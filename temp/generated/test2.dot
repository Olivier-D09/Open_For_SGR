digraph G {
  "0" [label="var v1 = 0          //v1Decl
var v2 = 4          //v2Decl
     |               //parBloc1
     | v1 = (v1 + v1)//v1Assign1 - firstPlus -v1Ref1 - v1Ref2
     | v2 = (v2 + v2)  //v2Assign1 - secondPlus -v2Ref1 - v2Ref2
     |
if (v1)             //if
{                   //bloc1
    v2 = v1         //v2Assign2 - v1Ref3
}else               
{                   //bloc2
    v1 = v2         //v1Assign2 - v2Ref3
}


(true && true) starts" shape="ellipse"];
  "1" [label="var v1 = 0          //v1Decl
var v2 = 4          //v2Decl
     |               //parBloc1
     | v1 = (v1 + v1)//v1Assign1 - firstPlus -v1Ref1 - v1Ref2
     | v2 = (v2 + v2)  //v2Assign1 - secondPlus -v2Ref1 - v2Ref2
     |
if (v1)             //if
{                   //bloc1
    v2 = v1         //v2Assign2 - v1Ref3
}else               
{                   //bloc2
    v1 = v2         //v1Assign2 - v2Ref3
}


(true && true) terminates" shape="ellipse"];
  "2" [label="var v1 = 0 starts" shape="ellipse"];
  "3" [label="var v1 = 0 terminates" shape="ellipse"];
  "4" [label="var v2 = 4 starts" shape="ellipse"];
  "5" [label="var v2 = 4 terminates" shape="ellipse"];
  "6" [label="|               //parBloc1
     | v1 = (v1 + v1)//v1Assign1 - firstPlus -v1Ref1 - v1Ref2
     | v2 = (v2 + v2)  //v2Assign1 - secondPlus -v2Ref1 - v2Ref2
     | starts" shape="ellipse"];
  "7" [label="|               //parBloc1
     | v1 = (v1 + v1)//v1Assign1 - firstPlus -v1Ref1 - v1Ref2
     | v2 = (v2 + v2)  //v2Assign1 - secondPlus -v2Ref1 - v2Ref2
     | terminates" shape="ellipse"];
  "8" [label="||" shape="triangle"];
  "30" [label="&&" shape="invtriangle"];
  "10" [label="v1 = (v1 + v1) starts" shape="ellipse"];
  "11" [label="v1 = (v1 + v1) terminates" shape="ellipse"];
  "12" [label="(v1 + v1) starts" shape="ellipse"];
  "13" [label="(v1 + v1) terminates" shape="ellipse"];
  "14" [label="||" shape="triangle"];
  "15" [label="v1 starts" shape="ellipse"];
  "16" [label="v1 terminates" shape="ellipse"];
  "17" [label="v1 starts" shape="ellipse"];
  "18" [label="v1 terminates" shape="ellipse"];
  "19" [label="&&" shape="invtriangle"];
  "20" [label="v2 = (v2 + v2) starts" shape="ellipse"];
  "21" [label="v2 = (v2 + v2) terminates" shape="ellipse"];
  "22" [label="(v2 + v2) starts" shape="ellipse"];
  "23" [label="(v2 + v2) terminates" shape="ellipse"];
  "24" [label="||" shape="triangle"];
  "25" [label="v2 starts" shape="ellipse"];
  "26" [label="v2 terminates" shape="ellipse"];
  "27" [label="v2 starts" shape="ellipse"];
  "28" [label="v2 terminates" shape="ellipse"];
  "29" [label="&&" shape="invtriangle"];
  "31" [label="if (v1)             //if
{                   //bloc1
    v2 = v1         //v2Assign2 - v1Ref3
}else               
{                   //bloc2
    v1 = v2         //v1Assign2 - v2Ref3
} starts" shape="ellipse"];
  "32" [label="if (v1)             //if
{                   //bloc1
    v2 = v1         //v2Assign2 - v1Ref3
}else               
{                   //bloc2
    v1 = v2         //v1Assign2 - v2Ref3
} terminates" shape="ellipse"];
  "33" [label="v1 starts" shape="ellipse"];
  "34" [label="v1 terminates" shape="ellipse"];
  "35" [label="condChoiceNode" shape="diamond"];
  "36" [label="{                   //bloc1
    v2 = v1         //v2Assign2 - v1Ref3
} starts" shape="ellipse"];
  "37" [label="{                   //bloc1
    v2 = v1         //v2Assign2 - v1Ref3
} terminates" shape="ellipse"];
  "38" [label="v2 = v1 starts" shape="ellipse"];
  "39" [label="v2 = v1 terminates" shape="ellipse"];
  "40" [label="v1 starts" shape="ellipse"];
  "41" [label="v1 terminates" shape="ellipse"];
  "42" [label="{                   //bloc2
    v1 = v2         //v1Assign2 - v2Ref3
} starts" shape="ellipse"];
  "43" [label="{                   //bloc2
    v1 = v2         //v1Assign2 - v2Ref3
} terminates" shape="ellipse"];
  "44" [label="v1 = v2 starts" shape="ellipse"];
  "45" [label="v1 = v2 terminates" shape="ellipse"];
  "46" [label="v2 starts" shape="ellipse"];
  "47" [label="v2 terminates" shape="ellipse"];
  "48" [label="or" shape="invtriangle"];
  "49" [label="(true && true) starts" shape="ellipse"];
  "50" [label="(true && true) terminates" shape="ellipse"];
  "51" [label="or" shape="invtriangle"];
  "52" [label="||" shape="triangle"];
  "53" [label="true starts" shape="ellipse"];
  "54" [label="true terminates" shape="ellipse"];
  "55" [label="true starts" shape="ellipse"];
  "56" [label="true terminates" shape="ellipse"];
  "57" [label="&&" shape="invtriangle"];
  "58" [label="evaluateConjunction2ConditionNode" shape="diamond"];
  "59" [label="&&" shape="invtriangle"];
  "60" [label="evaluateConjunction3ConditionNode" shape="diamond"];
  "2" -> "3" [label="sigma[\"Variable0_0_0_10currentValue\"] = new int();
void Variable0_0_0_101385 = 0; //undefined
*(sigma[\"Variable0_0_0_10currentValue\"]) = Variable0_0_0_101385;//TODO: fix this and avoid memory leak by deleting, constructing appropriately.."];
  "0" -> "2" [label=""];
  "4" -> "5" [label="sigma[\"Variable1_0_1_10currentValue\"] = new int();
void Variable1_0_1_101385 = 4; //undefined
*(sigma[\"Variable1_0_1_10currentValue\"]) = Variable1_0_1_101385;//TODO: fix this and avoid memory leak by deleting, constructing appropriately.."];
  "3" -> "4" [label=""];
  "6" -> "8" [label=""];
  "12" -> "14" [label=""];
  "15" -> "16" [label="int VarRef3_18_3_201588 = *(int *) sigma[\"Variable0_0_0_10currentValue\"];//currentValue}
int VarRef3_18_3_20terminates =  VarRef3_18_3_201588;"];
  "14" -> "15" [label=""];
  "17" -> "18" [label="int VarRef3_13_3_151588 = *(int *) sigma[\"Variable0_0_0_10currentValue\"];//currentValue}
int VarRef3_13_3_15terminates =  VarRef3_13_3_151588;"];
  "14" -> "17" [label=""];
  "16" -> "19" [label=""];
  "18" -> "19" [label=""];
  "19" -> "13" [label="int Plus3_12_3_214133 = VarRef3_18_3_20terminates;//valuedEventRef n2
int Plus3_12_3_214158 = VarRef3_13_3_15terminates;//valuedEventRef n1
int Plus3_12_3_214277 = Plus3_12_3_214158; //n1
int Plus3_12_3_214282 = Plus3_12_3_214133; //n2
int Plus3_12_3_214276 = Plus3_12_3_214282 + Plus3_12_3_214282;
int Plus3_12_3_21terminates =  Plus3_12_3_214276;"];
  "10" -> "12" [label=""];
  "13" -> "11" [label="int Assignment3_7_3_212363 = Plus3_12_3_21terminates;//valuedEventRef resRight
int Assignment3_7_3_212529 = Assignment3_7_3_212363; //resRight
*(sigma[\"Variable0_0_0_10currentValue\"]) = Assignment3_7_3_212529;//TODO: fix this and avoid memory leak by deleting, constructing appropriately.."];
  "8" -> "10" [label=""];
  "11" -> "30" [label=""];
  "22" -> "24" [label=""];
  "25" -> "26" [label="int VarRef4_18_4_201588 = *(int *) sigma[\"Variable1_0_1_10currentValue\"];//currentValue}
int VarRef4_18_4_20terminates =  VarRef4_18_4_201588;"];
  "24" -> "25" [label=""];
  "27" -> "28" [label="int VarRef4_13_4_151588 = *(int *) sigma[\"Variable1_0_1_10currentValue\"];//currentValue}
int VarRef4_13_4_15terminates =  VarRef4_13_4_151588;"];
  "24" -> "27" [label=""];
  "26" -> "29" [label=""];
  "28" -> "29" [label=""];
  "29" -> "23" [label="int Plus4_12_4_214133 = VarRef4_18_4_20terminates;//valuedEventRef n2
int Plus4_12_4_214158 = VarRef4_13_4_15terminates;//valuedEventRef n1
int Plus4_12_4_214277 = Plus4_12_4_214158; //n1
int Plus4_12_4_214282 = Plus4_12_4_214133; //n2
int Plus4_12_4_214276 = Plus4_12_4_214282 + Plus4_12_4_214282;
int Plus4_12_4_21terminates =  Plus4_12_4_214276;"];
  "20" -> "22" [label=""];
  "23" -> "21" [label="int Assignment4_7_4_212363 = Plus4_12_4_21terminates;//valuedEventRef resRight
int Assignment4_7_4_212529 = Assignment4_7_4_212363; //resRight
*(sigma[\"Variable1_0_1_10currentValue\"]) = Assignment4_7_4_212529;//TODO: fix this and avoid memory leak by deleting, constructing appropriately.."];
  "8" -> "20" [label=""];
  "21" -> "30" [label=""];
  "30" -> "7" [label=""];
  "5" -> "6" [label=""];
  "33" -> "34" [label="int VarRef6_4_6_61588 = *(int *) sigma[\"Variable0_0_0_10currentValue\"];//currentValue}
int VarRef6_4_6_6terminates =  VarRef6_4_6_61588;"];
  "31" -> "33" [label=""];
  "34" -> "35" [label=""];
  "40" -> "41" [label="int VarRef8_9_8_111588 = *(int *) sigma[\"Variable0_0_0_10currentValue\"];//currentValue}
int VarRef8_9_8_11terminates =  VarRef8_9_8_111588;"];
  "38" -> "40" [label=""];
  "41" -> "39" [label="int Assignment8_4_8_112363 = VarRef8_9_8_11terminates;//valuedEventRef resRight
int Assignment8_4_8_112529 = Assignment8_4_8_112363; //resRight
*(sigma[\"Variable1_0_1_10currentValue\"]) = Assignment8_4_8_112529;//TODO: fix this and avoid memory leak by deleting, constructing appropriately.."];
  "36" -> "38" [label=""];
  "39" -> "37" [label=""];
  "35" -> "36" [label=""];
  "46" -> "47" [label="int VarRef11_9_11_111588 = *(int *) sigma[\"Variable1_0_1_10currentValue\"];//currentValue}
int VarRef11_9_11_11terminates =  VarRef11_9_11_111588;"];
  "44" -> "46" [label=""];
  "47" -> "45" [label="int Assignment11_4_11_112363 = VarRef11_9_11_11terminates;//valuedEventRef resRight
int Assignment11_4_11_112529 = Assignment11_4_11_112363; //resRight
*(sigma[\"Variable0_0_0_10currentValue\"]) = Assignment11_4_11_112529;//TODO: fix this and avoid memory leak by deleting, constructing appropriately.."];
  "42" -> "44" [label=""];
  "45" -> "43" [label=""];
  "35" -> "42" [label=""];
  "43" -> "48" [label=""];
  "37" -> "48" [label=""];
  "48" -> "32" [label=""];
  "7" -> "31" [label=""];
  "51" -> "50" [label=""];
  "49" -> "52" [label=""];
  "53" -> "54" [label="void BooleanConst15_1_15_54455 = true; //undefined
void BooleanConst15_1_15_5terminates =  BooleanConst15_1_15_54455;"];
  "52" -> "53" [label=""];
  "55" -> "56" [label="void BooleanConst15_9_15_134455 = true; //undefined
void BooleanConst15_9_15_13terminates =  BooleanConst15_9_15_134455;"];
  "52" -> "55" [label=""];
  "54" -> "57" [label=""];
  "56" -> "57" [label=""];
  "57" -> "58" [label="bool Conjunction15_0_15_143612 = BooleanConst15_9_15_13terminates;//valuedEventRef res"];
  "58" -> "51" [label="bool Conjunction15_0_15_143743 = Conjunction15_0_15_143612; //res
bool Conjunction15_0_15_14terminates =  Conjunction15_0_15_143743;"];
  "56" -> "59" [label=""];
  "54" -> "59" [label=""];
  "59" -> "60" [label="bool Conjunction15_0_15_143790 = BooleanConst15_1_15_5terminates;//valuedEventRef res"];
  "60" -> "51" [label="bool Conjunction15_0_15_143921 = Conjunction15_0_15_143612; //res
bool Conjunction15_0_15_14terminates =  Conjunction15_0_15_143921;"];
  "32" -> "49" [label=""];
  "50" -> "1" [label=""];
}